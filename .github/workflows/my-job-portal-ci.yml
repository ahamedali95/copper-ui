name: my-job-portal-ui
on:
  push:
    branches: [JB-3]
  pull_request:
    branches: [master]

  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: Make a choice
        required: true
        options:
          - Build
          - dev
          - prod

jobs:
  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        node-version: [ '16.10.0' ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Commit History
        run: |
          git log "${github.ref_name}"

      - name: Download binary
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: |
          npm ci

      - name: Static analysis
        run: |
          echo "Linting in progress..."
          npm run lint
          echo "Type checking in progress..."
          npm run check:typings

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Unit Tests
        run: |
          echo "Unit Tests are running..."
#          npm run test

  security:
    name: Vulnerability Scan
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SAST Scan
        uses: ShiftLeftSecurity/scan-action@master
        with:
          type: 'nodejs'

      - name: SCA scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  publish:
    if: inputs.action == 'dev'
    name: Publish Artifacts
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.action }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Create artifacts
        run: |
          echo "Running production build..."
          npm run build:prod

      - name: Get application version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Compress artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r "my-job-portal-${{ steps.package-version.outputs.current-version }}-${{ github.ref_name }}.${{ github.run_number }}-SNAPSHOT.zip" build

      - name: Publish to artifactory
        uses: advancedcsg-open/action-jfrog-cli@master
        with:
          url: 'https://ahamedrepo.jfrog.io/artifactory/'
          credentials type: 'accesstoken'
          access token: ${{ secrets.JFROG_TOKEN }}
          args: upload "my-job-portal-${{ steps.package-version.outputs.current-version }}-${{ github.ref_name }}.${{ github.run_number }}-SNAPSHOT.zip" "my-job-portal-fe-generic-local/" --fail-no-op=true

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './build'
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}