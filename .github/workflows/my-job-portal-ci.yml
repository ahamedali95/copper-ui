name: my-job-portal-ui
on:
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        node-version: [ '16.10.0' ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download binary
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Static analysis
        run: |
          echo "Linting in progress..."
          npm run lint
          echo "Type checking in progress..."
          npm run check:typings

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Unit Tests
        run: |
          echo "Unit Tests are running..."
#          npm run test

  security:
    name: Vulnerability Scan
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SAST Scan
        uses: ShiftLeftSecurity/scan-action@master
        with:
          type: 'nodejs'

      - name: SCA scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  publish:
    name: Publish Artifacts
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Create artifacts
        run: |
          echo "Running production build..."
          npm run build:prod

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

      - name: Upload artifacts
        uses: jfrog/setup-jfrog-cli@v2
        with:
          JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
      - run: |
          jf c add --url ${{ secrets.JFROG_ARTIFACTORY_URL }}
          echo "URL: ${secrets.JFROG_ARTIFACTORY_URL}"
          sudo touch newfile.txt
          jf rt upload --newfile.txt my-job-portal-ui-generic-local/


